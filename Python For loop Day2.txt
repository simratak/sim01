s='python'
for a in s:
    print('a=',a)

b='java'
L=[10,20,30]
for b in L:
    print('B=',b)
    
print('Now a and b=',a,b)

O/P:
a= p
a= y
a= t
a= h
a= o
a= n
B= 10
B= 20
B= 30
Now a and b= n 30


D={'A':10,'B':20}
for k in D:
    print('K=',k)
line='-'*40
print(line)
for k in D.keys():
    print('Key=',k,' Value=',D[k])
print(line)
for v in D.values():
    print('Value=',v)
print(line)
for i in D.items(): #[('A',10),('B',20)]
    print('i=',i,i[0],i[1]) #Since i is a tuple, for selecting the key, select the 0th element i.e element with index 0
                          #for selecting the value, select the element with index 1
                          #i=('A',10)
print(line)
for i,j in D.items():
    print(i,j)
print(line)
for l in D:
    print(D['A'],D['B'])
print(line)

O/P:
K= A
K= B
----------------------------------------
Key= A  Value= 10
Key= B  Value= 20
----------------------------------------
Value= 10
Value= 20
----------------------------------------
i= ('A', 10) A 10
i= ('B', 20) B 20
----------------------------------------
A 10
B 20
----------------------------------------
10 20
10 20
----------------------------------------


hosts=['h1','h2','h3'] #list object
ips=['ip1','ip2'] #list object
z=zip(hosts,ips) #generator object
#zip can pass n number of collections, but ignores the element if there is no pair to match
#there is no pre-defined function for zip, so it points to the refence of the object
#list function is pre-defined, therefore it will point to the object
print(z)
print(list(z))
for h,p in zip(hosts,ips):
    print(h,p)
print(line)

O/P:
<zip object at 0x000001DE53B8DB80>
[('h1', 'ip1'), ('h2', 'ip2')]
h1 ip1
h2 ip2
----------------------------------------


r1=range(10)
r2=range(1,10)
r3=range(1,10,2)
print(list(r1),list(r2),list(r3),sep='\n')
print(line)
r4=range(10,1,-1)
print(list(r4))
print(line)
for i in range(2,10,2):
    print('i=',i)
print(line)

O/P:
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, 3, 5, 7, 9]
----------------------------------------
[10, 9, 8, 7, 6, 5, 4, 3, 2]
----------------------------------------
i= 2
i= 4
i= 6
i= 8
----------------------------------------


for h in range(0,len(hosts)):
    print(hosts[h])
print(line)
for h in range(0,len(hosts),2):
    print(hosts[h])
print(line)
for h in hosts[::2]:
    print('h=',h)
print(line)

O/P:
h1
h2
h3
----------------------------------------
h1
h3
----------------------------------------
h= h1
h= h3
----------------------------------------


comp=['IBM','DEL1','SAP','DEL2']
for c in comp:
    if c.startswith('DEL'):
        print('Found',c)

O/P:
Found DEL1
Found DEL2


comp=['IBM','DEL1','SAP','DEL2']
for c in comp:
    if c.startswith('DEL'):
        print('Found',c)
        break

O/P:
Found DEL1


comp=['IBM','eDEL1','SAP','eDEL2']
F=0
for c in comp:
    if c.startswith('DEL'):
        print('Found',c)
        F=1
if F==0:
    print('Not found')

O/P:
Not found


comp=['IBM','DEL1','SAP','DEL2']
for c in comp:
    if c.startswith('DEL'):
        print('Found',c)
        break
else:
    print('Not Found')
print(line)

O/P:
Found DEL1


for i in comp:
    if not i.startswith('DEL'):
        continue
    if i.startswith('DEL'):
        print('Some logic')
    print('Last statement of for')

O/P:
Some logic
Last statement of for
Some logic
Last statement of for






