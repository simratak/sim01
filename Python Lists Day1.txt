#list->class
L1=list([10,20,30])
L2=[10,12.5,'Python',['a','b']]
print(L1) 
print(L2)
print(L2[1])
print(L2[2][1])
print(L2[-1:1:-1])
print(L2[-1:1:1])

#add
L2.append(200)
print('append=',L2)
L2.insert(2,300)
print('insert=',L2)

L3=[10,20]
L4=['a','b']
L5=L3+L4 #creating a new list L5 from L3 and L4
L6=L3*10
print(L5)
print(L6)

L3.extend(L4) #extending the list L3
print('extend=',L3)

#remove
r1=L5.pop() #pop returns the removed value
print('r1=',r1,L5)
r2=L5.pop(2)
print(r2,L5)
r3=L5.remove(20) #remove does not return any value
print(r3,L5)
del L5[0]
print('after del=')

#update
print('L3=',L3)
L3[1]='java'
print('after update=',L3)

#some other methods
L6=[10,30,20]
L6.sort() #ascending order #does not work on heterogenous data
print('Sort ascending=',L6)
L7=['z','a','b']
L7.sort(reverse=True) #descending order
print('Sort descending=',L7)

L8=[10,'a',20,'b']
L8.reverse()
print('reverse=',L8)

L8.clear()
print('L8=',L8)


#copy
L=[10,['a','b']]
M=L #reference copy
N=L.copy() #shallow copy

#copy module
import copy
P=copy.deepcopy(L)
print(id(L[0]),id(P[0]))
print(id(L[1]),id(P[1]))


O/P:
================== RESTART: C:\Python Training\bin\list_ex.py ==================
[10, 20, 30]
[10, 12.5, 'Python', ['a', 'b']]
12.5
y
[['a', 'b'], 'Python']
[]
append= [10, 12.5, 'Python', ['a', 'b'], 200]
insert= [10, 12.5, 300, 'Python', ['a', 'b'], 200]
[10, 20, 'a', 'b']
[10, 20, 10, 20, 10, 20, 10, 20, 10, 20, 10, 20, 10, 20, 10, 20, 10, 20, 10, 20]
extend= [10, 20, 'a', 'b']
r1= b [10, 20, 'a']
a [10, 20]
None [10]
after del=
L3= [10, 20, 'a', 'b']
after update= [10, 'java', 'a', 'b']
Sort ascending= [10, 20, 30]
Sort descending= ['z', 'b', 'a']
reverse= ['b', 20, 'a', 10]
L8= []
140718160660416 140718160660416
1755254471616 1755254479680
>>> 
